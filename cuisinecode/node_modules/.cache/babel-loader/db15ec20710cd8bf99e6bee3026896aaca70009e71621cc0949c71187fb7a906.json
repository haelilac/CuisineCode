{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shana Carmella\\\\OneDrive\\\\Documents\\\\CuisineCodeSample\\\\cuisinecodetry\\\\src\\\\components\\\\IngredientsInput.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass IngredientsInput extends Component {\n  // ... (existing code)\n\n  render() {\n    const {\n      numberOfIngredients,\n      ingredientInputs\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredientsCount\",\n        children: \"Number of Ingredients: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"ingredientsCount\",\n        value: numberOfIngredients,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), Array.from({\n        length: numberOfIngredients\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `ingredient${index + 1}`,\n          children: [\"Ingredient \", index + 1, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `ingredient${index + 1}`,\n          value: ingredientInputs[index],\n          onChange: e => this.handleIngredientChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.onSearchClick,\n        children: \"Search Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default IngredientsInput;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","IngredientsInput","render","numberOfIngredients","ingredientInputs","state","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","handleInputChange","Array","from","length","map","_","index","e","handleIngredientChange","target","onClick","props","onSearchClick"],"sources":["C:/Users/Shana Carmella/OneDrive/Documents/CuisineCodeSample/cuisinecodetry/src/components/IngredientsInput.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass IngredientsInput extends Component {\r\n  // ... (existing code)\r\n\r\n  render() {\r\n    const { numberOfIngredients, ingredientInputs } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <label htmlFor=\"ingredientsCount\">Number of Ingredients: </label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"ingredientsCount\"\r\n          value={numberOfIngredients}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        {Array.from({ length: numberOfIngredients }).map((_, index) => (\r\n          <div key={index}>\r\n            <label htmlFor={`ingredient${index + 1}`}>Ingredient {index + 1}: </label>\r\n            <input\r\n              type=\"text\"\r\n              id={`ingredient${index + 1}`}\r\n              value={ingredientInputs[index]}\r\n              onChange={(e) => this.handleIngredientChange(index, e.target.value)}\r\n            />\r\n          </div>\r\n        ))}\r\n        \r\n        <button onClick={this.props.onSearchClick}>Search Recipes</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IngredientsInput;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,SAASH,SAAS,CAAC;EACvC;;EAEAI,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC,mBAAmB;MAAEC;IAAiB,CAAC,GAAG,IAAI,CAACC,KAAK;IAE5D,oBACEL,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAOO,OAAO,EAAC,kBAAkB;QAAAD,QAAA,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjEX,OAAA;QACEY,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,kBAAkB;QACrBC,KAAK,EAAEX,mBAAoB;QAC3BY,QAAQ,EAAE,IAAI,CAACC;MAAkB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,EAEDM,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEhB;MAAoB,CAAC,CAAC,CAACiB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACxDtB,OAAA;QAAAM,QAAA,gBACEN,OAAA;UAAOO,OAAO,EAAG,aAAYe,KAAK,GAAG,CAAE,EAAE;UAAAhB,QAAA,GAAC,aAAW,EAACgB,KAAK,GAAG,CAAC,EAAC,IAAE;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1EX,OAAA;UACEY,IAAI,EAAC,MAAM;UACXC,EAAE,EAAG,aAAYS,KAAK,GAAG,CAAE,EAAE;UAC7BR,KAAK,EAAEV,gBAAgB,CAACkB,KAAK,CAAE;UAC/BP,QAAQ,EAAGQ,CAAC,IAAK,IAAI,CAACC,sBAAsB,CAACF,KAAK,EAAEC,CAAC,CAACE,MAAM,CAACX,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC;MAAA,GAPMW,KAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACN,CAAC,eAEFX,OAAA;QAAQ0B,OAAO,EAAE,IAAI,CAACC,KAAK,CAACC,aAAc;QAAAtB,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAEV;AACF;AAEA,eAAeV,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
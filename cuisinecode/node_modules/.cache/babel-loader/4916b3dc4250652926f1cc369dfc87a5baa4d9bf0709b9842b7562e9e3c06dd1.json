{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shana Carmella\\\\OneDrive\\\\Documents\\\\CuisineCodeSample\\\\cuisinecodetry\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport RecipeCard from './components/RecipeCard';\nimport IngredientsInput from './components/IngredientsInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSearchRecipes = (numberOfIngredients, ingredientInputs) => {\n      // You can use the numberOfIngredients and ingredientInputs in your search logic.\n      // For now, I'll just log them for demonstration purposes.\n      console.log('Number of Ingredients:', numberOfIngredients);\n      console.log('Ingredient Inputs:', ingredientInputs);\n    };\n    this.state = {\n      meal: {}\n    };\n  }\n  componentDidMount() {\n    // Fetching latest recipes on component mount\n    const URL = 'https://www.themealdb.com/api/json/v1/1/latest.php';\n    axios.get(URL).then(res => {\n      const meal = res.data.meals;\n      if (typeof meal === 'object') {\n        this.setState({\n          meal\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  render() {\n    const {\n      meal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(IngredientsInput, {\n        onSearchClick: this.handleSearchRecipes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), meal.length > 0 && /*#__PURE__*/_jsxDEV(RecipeCard, {\n        meals: meal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","RecipeCard","IngredientsInput","jsxDEV","_jsxDEV","App","constructor","props","handleSearchRecipes","numberOfIngredients","ingredientInputs","console","log","state","meal","componentDidMount","URL","get","then","res","data","meals","setState","catch","error","render","className","children","onSearchClick","fileName","_jsxFileName","lineNumber","columnNumber","length"],"sources":["C:/Users/Shana Carmella/OneDrive/Documents/CuisineCodeSample/cuisinecodetry/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport RecipeCard from './components/RecipeCard';\nimport IngredientsInput from './components/IngredientsInput';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meal: {},\n    };\n  }\n\n  handleSearchRecipes = (numberOfIngredients, ingredientInputs) => {\n    // You can use the numberOfIngredients and ingredientInputs in your search logic.\n    // For now, I'll just log them for demonstration purposes.\n    console.log('Number of Ingredients:', numberOfIngredients);\n    console.log('Ingredient Inputs:', ingredientInputs);\n  };\n\n  componentDidMount() {\n    // Fetching latest recipes on component mount\n    const URL = 'https://www.themealdb.com/api/json/v1/1/latest.php';\n    axios\n      .get(URL)\n      .then((res) => {\n        const meal = res.data.meals;\n        if (typeof meal === 'object') {\n          this.setState({ meal });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { meal } = this.state;\n\n    return (\n      <div className=\"App\">\n        <IngredientsInput onSearchClick={this.handleSearchRecipes} />\n        {meal.length > 0 && <RecipeCard meals={meal} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,GAAG,SAASN,SAAS,CAAC;EAC1BO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,mBAAmB,GAAG,CAACC,mBAAmB,EAAEC,gBAAgB,KAAK;MAC/D;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,mBAAmB,CAAC;MAC1DE,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,gBAAgB,CAAC;IACrD,CAAC;IAVC,IAAI,CAACG,KAAK,GAAG;MACXC,IAAI,EAAE,CAAC;IACT,CAAC;EACH;EASAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,MAAMC,GAAG,GAAG,oDAAoD;IAChEhB,KAAK,CACFiB,GAAG,CAACD,GAAG,CAAC,CACRE,IAAI,CAAEC,GAAG,IAAK;MACb,MAAML,IAAI,GAAGK,GAAG,CAACC,IAAI,CAACC,KAAK;MAC3B,IAAI,OAAOP,IAAI,KAAK,QAAQ,EAAE;QAC5B,IAAI,CAACQ,QAAQ,CAAC;UAAER;QAAK,CAAC,CAAC;MACzB;IACF,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;MAChBb,OAAO,CAACC,GAAG,CAACY,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEX;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAE3B,oBACET,OAAA;MAAKsB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBvB,OAAA,CAACF,gBAAgB;QAAC0B,aAAa,EAAE,IAAI,CAACpB;MAAoB;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5DlB,IAAI,CAACmB,MAAM,GAAG,CAAC,iBAAI7B,OAAA,CAACH,UAAU;QAACoB,KAAK,EAAEP;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAEV;AACF;AAEA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shana Carmella\\\\OneDrive\\\\Documents\\\\CuisineCodeSample\\\\cuisinecodetry\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport RecipeCard from './components/RecipeCard';\nimport IngredientsInput from './components/IngredientsInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleIngredientsChange = numberOfIngredients => {\n      this.setState({\n        numberOfIngredients,\n        ingredientInputs: new Array(numberOfIngredients).fill('')\n      });\n    };\n    this.handleIngredientChange = (index, value) => {\n      const ingredientInputs = [...this.state.ingredientInputs];\n      ingredientInputs[index] = value;\n      this.setState({\n        ingredientInputs\n      });\n    };\n    this.handleSearchRecipes = () => {\n      const {\n        numberOfIngredients,\n        ingredientInputs\n      } = this.state;\n\n      // You can use the numberOfIngredients and ingredientInputs in your search logic.\n      // For now, I'll just log them for demonstration purposes.\n      console.log('Number of Ingredients:', numberOfIngredients);\n      console.log('Ingredient Inputs:', ingredientInputs);\n    };\n    this.state = {\n      meal: {},\n      numberOfIngredients: 0,\n      ingredientInputs: []\n    };\n  }\n  componentDidMount() {\n    // Fetching latest recipes on component mount\n    const URL = 'https://www.themealdb.com/api/json/v1/1/latest.php';\n    axios.get(URL).then(res => {\n      const meal = res.data.meals;\n      if (typeof meal === 'object') {\n        this.setState({\n          meal\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  render() {\n    const {\n      meal,\n      numberOfIngredients,\n      ingredientInputs\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(IngredientsInput, {\n        onIngredientsChange: this.handleIngredientsChange,\n        onIngredientChange: this.handleIngredientChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSearchRecipes,\n        children: \"Search Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), meal.length > 0 && /*#__PURE__*/_jsxDEV(RecipeCard, {\n        meals: meal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","RecipeCard","IngredientsInput","jsxDEV","_jsxDEV","App","constructor","props","handleIngredientsChange","numberOfIngredients","setState","ingredientInputs","Array","fill","handleIngredientChange","index","value","state","handleSearchRecipes","console","log","meal","componentDidMount","URL","get","then","res","data","meals","catch","error","render","className","children","onIngredientsChange","onIngredientChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length"],"sources":["C:/Users/Shana Carmella/OneDrive/Documents/CuisineCodeSample/cuisinecodetry/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport RecipeCard from './components/RecipeCard';\nimport IngredientsInput from './components/IngredientsInput';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meal: {},\n      numberOfIngredients: 0,\n      ingredientInputs: [],\n    };\n  }\n\n  handleIngredientsChange = (numberOfIngredients) => {\n    this.setState({\n      numberOfIngredients,\n      ingredientInputs: new Array(numberOfIngredients).fill(''),\n    });\n  };\n\n  handleIngredientChange = (index, value) => {\n    const ingredientInputs = [...this.state.ingredientInputs];\n    ingredientInputs[index] = value;\n    this.setState({ ingredientInputs });\n  };\n\n  handleSearchRecipes = () => {\n    const { numberOfIngredients, ingredientInputs } = this.state;\n\n    // You can use the numberOfIngredients and ingredientInputs in your search logic.\n    // For now, I'll just log them for demonstration purposes.\n    console.log('Number of Ingredients:', numberOfIngredients);\n    console.log('Ingredient Inputs:', ingredientInputs);\n  };\n\n  componentDidMount() {\n    // Fetching latest recipes on component mount\n    const URL = 'https://www.themealdb.com/api/json/v1/1/latest.php';\n    axios\n      .get(URL)\n      .then((res) => {\n        const meal = res.data.meals;\n        if (typeof meal === 'object') {\n          this.setState({ meal });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { meal, numberOfIngredients, ingredientInputs } = this.state;\n\n    return (\n      <div className=\"App\">\n        <IngredientsInput\n          onIngredientsChange={this.handleIngredientsChange}\n          onIngredientChange={this.handleIngredientChange}\n        />\n        <button onClick={this.handleSearchRecipes}>Search Recipes</button>\n        {meal.length > 0 && <RecipeCard meals={meal} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
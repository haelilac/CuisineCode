{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shana Carmella\\\\OneDrive\\\\Documents\\\\CuisineCodeSample\\\\cuisinecodetry\\\\src\\\\components\\\\IngredientsInput.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass IngredientsInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = e => {\n      this.setState({\n        numberOfIngredients: e.target.value\n      });\n    };\n    this.handleSearchClick = () => {\n      // You can implement the logic to fetch recipes based on the number of ingredients\n      // and update the parent component's state with the fetched recipes.\n      // For simplicity, I'll just alert the number of ingredients for now.\n      alert(`Searching for recipes with ${this.state.numberOfIngredients} ingredients.`);\n    };\n    this.state = {\n      numberOfIngredients: 0\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredientsInput\",\n        children: \"Number of Ingredients: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"ingredientsInput\",\n        value: this.state.numberOfIngredients,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSearchClick,\n        children: \"Search Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default IngredientsInput;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","IngredientsInput","constructor","props","handleInputChange","e","setState","numberOfIngredients","target","value","handleSearchClick","alert","state","render","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onClick"],"sources":["C:/Users/Shana Carmella/OneDrive/Documents/CuisineCodeSample/cuisinecodetry/src/components/IngredientsInput.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass IngredientsInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberOfIngredients: 0,\r\n    };\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      numberOfIngredients: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSearchClick = () => {\r\n    // You can implement the logic to fetch recipes based on the number of ingredients\r\n    // and update the parent component's state with the fetched recipes.\r\n    // For simplicity, I'll just alert the number of ingredients for now.\r\n    alert(`Searching for recipes with ${this.state.numberOfIngredients} ingredients.`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label htmlFor=\"ingredientsInput\">Number of Ingredients: </label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"ingredientsInput\"\r\n          value={this.state.numberOfIngredients}\r\n          onChange={this.handleInputChange}\r\n        />\r\n        <button onClick={this.handleSearchClick}>Search Recipes</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IngredientsInput;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,SAASH,SAAS,CAAC;EACvCI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,iBAAiB,GAAIC,CAAC,IAAK;MACzB,IAAI,CAACC,QAAQ,CAAC;QACZC,mBAAmB,EAAEF,CAAC,CAACG,MAAM,CAACC;MAChC,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDC,iBAAiB,GAAG,MAAM;MACxB;MACA;MACA;MACAC,KAAK,CAAE,8BAA6B,IAAI,CAACC,KAAK,CAACL,mBAAoB,eAAc,CAAC;IACpF,CAAC;IAhBC,IAAI,CAACK,KAAK,GAAG;MACXL,mBAAmB,EAAE;IACvB,CAAC;EACH;EAeAM,MAAMA,CAAA,EAAG;IACP,oBACEb,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAOe,OAAO,EAAC,kBAAkB;QAAAD,QAAA,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjEnB,OAAA;QACEoB,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAC,kBAAkB;QACrBZ,KAAK,EAAE,IAAI,CAACG,KAAK,CAACL,mBAAoB;QACtCe,QAAQ,EAAE,IAAI,CAAClB;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFnB,OAAA;QAAQuB,OAAO,EAAE,IAAI,CAACb,iBAAkB;QAAAI,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAEV;AACF;AAEA,eAAelB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
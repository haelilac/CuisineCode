{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shana Carmella\\\\OneDrive\\\\Documents\\\\CuisineCodeSample\\\\cuisinecodetry\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { recipes } from './RecipeData'; // Import your local recipe database\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchInput, setSearchInput] = useState('');\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0);\n  const handleSearch = () => {\n    // Implement your own search logic if needed\n    // For example, you can filter recipes based on the search input\n    // and update the state accordingly.\n  };\n  const handleNextRecipe = () => {\n    setCurrentRecipeIndex(prevIndex => (prevIndex + 1) % recipes.length);\n  };\n  const handlePreviousRecipe = () => {\n    setCurrentRecipeIndex(prevIndex => (prevIndex - 1 + recipes.length) % recipes.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xzxh8/qe7YFmiQrtnbMx9f9TU6A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","recipes","jsxDEV","_jsxDEV","App","_s","searchInput","setSearchInput","currentRecipeIndex","setCurrentRecipeIndex","handleSearch","handleNextRecipe","prevIndex","length","handlePreviousRecipe","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shana Carmella/OneDrive/Documents/CuisineCodeSample/cuisinecodetry/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport { recipes } from './RecipeData'; // Import your local recipe database\nimport './App.css';\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState('');\n  const [currentRecipeIndex, setCurrentRecipeIndex] = useState(0);\n\n  const handleSearch = () => {\n    // Implement your own search logic if needed\n    // For example, you can filter recipes based on the search input\n    // and update the state accordingly.\n  };\n\n  const handleNextRecipe = () => {\n    setCurrentRecipeIndex((prevIndex) => (prevIndex + 1) % recipes.length);\n  };\n\n  const handlePreviousRecipe = () => {\n    setCurrentRecipeIndex((prevIndex) => (prevIndex - 1 + recipes.length) % recipes.length);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Your existing JSX code */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,cAAc,CAAC,CAAC;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE/D,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA;EAAA,CACD;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,qBAAqB,CAAEG,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIX,OAAO,CAACY,MAAM,CAAC;EACxE,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCL,qBAAqB,CAAEG,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,GAAGX,OAAO,CAACY,MAAM,IAAIZ,OAAO,CAACY,MAAM,CAAC;EACzF,CAAC;EAED,oBACEV,OAAA;IAAKY,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV;AAACd,EAAA,CAvBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
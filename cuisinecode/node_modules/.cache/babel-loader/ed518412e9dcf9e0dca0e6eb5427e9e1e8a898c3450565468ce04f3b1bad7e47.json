{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shana Carmella\\\\OneDrive\\\\Documents\\\\CuisineCodeSample\\\\cuisinecodetry\\\\src\\\\components\\\\IngredientsInput.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass IngredientsInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = e => {\n      const numberOfIngredients = parseInt(e.target.value, 10);\n      if (!isNaN(numberOfIngredients) && numberOfIngredients >= 0) {\n        this.setState({\n          numberOfIngredients,\n          ingredientInputs: new Array(numberOfIngredients).fill('')\n        });\n      }\n    };\n    this.handleIngredientChange = (index, value) => {\n      const ingredientInputs = [...this.state.ingredientInputs];\n      ingredientInputs[index] = value;\n      this.setState({\n        ingredientInputs\n      });\n    };\n    this.handleSearchClick = () => {\n      const {\n        numberOfIngredients,\n        ingredientInputs\n      } = this.state;\n\n      // You can use the numberOfIngredients and ingredientInputs in your search logic.\n      // For now, I'll just log them for demonstration purposes.\n      console.log('Number of Ingredients:', numberOfIngredients);\n      console.log('Ingredient Inputs:', ingredientInputs);\n    };\n    this.state = {\n      numberOfIngredients: 0,\n      ingredientInputs: []\n    };\n  }\n  render() {\n    const {\n      numberOfIngredients,\n      ingredientInputs\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ingredientsCount\",\n        children: \"Number of Ingredients: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"ingredientsCount\",\n        value: numberOfIngredients,\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), Array.from({\n        length: numberOfIngredients\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `ingredient${index + 1}`,\n          children: [\"Ingredient \", index + 1, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `ingredient${index + 1}`,\n          value: ingredientInputs[index],\n          onChange: e => this.handleIngredientChange(index, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSearchClick,\n        children: \"Search Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default IngredientsInput;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","IngredientsInput","constructor","props","handleInputChange","e","numberOfIngredients","parseInt","target","value","isNaN","setState","ingredientInputs","Array","fill","handleIngredientChange","index","state","handleSearchClick","console","log","render","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","from","length","map","_","onClick"],"sources":["C:/Users/Shana Carmella/OneDrive/Documents/CuisineCodeSample/cuisinecodetry/src/components/IngredientsInput.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass IngredientsInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberOfIngredients: 0,\r\n      ingredientInputs: [],\r\n    };\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    const numberOfIngredients = parseInt(e.target.value, 10);\r\n\r\n    if (!isNaN(numberOfIngredients) && numberOfIngredients >= 0) {\r\n      this.setState({\r\n        numberOfIngredients,\r\n        ingredientInputs: new Array(numberOfIngredients).fill(''),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleIngredientChange = (index, value) => {\r\n    const ingredientInputs = [...this.state.ingredientInputs];\r\n    ingredientInputs[index] = value;\r\n    this.setState({ ingredientInputs });\r\n  };\r\n\r\n  handleSearchClick = () => {\r\n    const { numberOfIngredients, ingredientInputs } = this.state;\r\n\r\n    // You can use the numberOfIngredients and ingredientInputs in your search logic.\r\n    // For now, I'll just log them for demonstration purposes.\r\n    console.log('Number of Ingredients:', numberOfIngredients);\r\n    console.log('Ingredient Inputs:', ingredientInputs);\r\n  };\r\n\r\n  render() {\r\n    const { numberOfIngredients, ingredientInputs } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <label htmlFor=\"ingredientsCount\">Number of Ingredients: </label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"ingredientsCount\"\r\n          value={numberOfIngredients}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        {Array.from({ length: numberOfIngredients }).map((_, index) => (\r\n          <div key={index}>\r\n            <label htmlFor={`ingredient${index + 1}`}>Ingredient {index + 1}: </label>\r\n            <input\r\n              type=\"text\"\r\n              id={`ingredient${index + 1}`}\r\n              value={ingredientInputs[index]}\r\n              onChange={(e) => this.handleIngredientChange(index, e.target.value)}\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        <button onClick={this.handleSearchClick}>Search Recipes</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IngredientsInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
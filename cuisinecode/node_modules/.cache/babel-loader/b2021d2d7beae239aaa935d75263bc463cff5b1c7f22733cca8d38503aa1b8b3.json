{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shana Carmella\\\\OneDrive\\\\Documents\\\\CuisineCodeSample\\\\cuisinecodetry\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport RecipeCard from './components/RecipeCard'; // Update the import path for RecipeCard\nimport IngredientsInput from './components/IngredientsInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleIngredientsChange = ingredients => {\n      this.setState({\n        ingredients\n      });\n    };\n    this.handleSearchRecipes = () => {\n      // You can implement the logic to fetch recipes based on the number of ingredients\n      // and update the state with the fetched recipes.\n      // For simplicity, I'll just alert the number of ingredients for now.\n      alert(`Searching for recipes with ${this.state.ingredients} ingredients.`);\n    };\n    this.state = {\n      meal: {},\n      ingredients: 0\n    };\n  }\n  componentDidMount() {\n    // Fetching latest recipes on component mount\n    const URL = 'https://www.themealdb.com/api/json/v1/1/latest.php';\n    axios.get(URL).then(res => {\n      const meal = res.data.meals;\n      if (typeof meal === 'object') {\n        this.setState({\n          meal\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  render() {\n    const data = this.state.meal;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(IngredientsInput, {\n        onIngredientsChange: this.handleIngredientsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleSearchRecipes,\n        children: \"Search Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(RecipeCard, {\n        meals: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","RecipeCard","IngredientsInput","jsxDEV","_jsxDEV","App","constructor","props","handleIngredientsChange","ingredients","setState","handleSearchRecipes","alert","state","meal","componentDidMount","URL","get","then","res","data","meals","catch","error","console","log","render","className","children","onIngredientsChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length"],"sources":["C:/Users/Shana Carmella/OneDrive/Documents/CuisineCodeSample/cuisinecodetry/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport RecipeCard from './components/RecipeCard'; // Update the import path for RecipeCard\nimport IngredientsInput from './components/IngredientsInput';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meal: {},\n      ingredients: 0,\n    };\n  }\n\n  handleIngredientsChange = (ingredients) => {\n    this.setState({\n      ingredients,\n    });\n  };\n\n  handleSearchRecipes = () => {\n    // You can implement the logic to fetch recipes based on the number of ingredients\n    // and update the state with the fetched recipes.\n    // For simplicity, I'll just alert the number of ingredients for now.\n    alert(`Searching for recipes with ${this.state.ingredients} ingredients.`);\n  };\n\n  componentDidMount() {\n    // Fetching latest recipes on component mount\n    const URL = 'https://www.themealdb.com/api/json/v1/1/latest.php';\n    axios\n      .get(URL)\n      .then((res) => {\n        const meal = res.data.meals;\n        if (typeof meal === 'object') {\n          this.setState({ meal });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const data = this.state.meal;\n\n    return (\n      <div className=\"App\">\n        <IngredientsInput onIngredientsChange={this.handleIngredientsChange} />\n        <button onClick={this.handleSearchRecipes}>Search Recipes</button>\n        {data.length > 0 && <RecipeCard meals={data} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB,CAAC,CAAC;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,GAAG,SAASN,SAAS,CAAC;EAC1BO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAOfC,uBAAuB,GAAIC,WAAW,IAAK;MACzC,IAAI,CAACC,QAAQ,CAAC;QACZD;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDE,mBAAmB,GAAG,MAAM;MAC1B;MACA;MACA;MACAC,KAAK,CAAE,8BAA6B,IAAI,CAACC,KAAK,CAACJ,WAAY,eAAc,CAAC;IAC5E,CAAC;IAjBC,IAAI,CAACI,KAAK,GAAG;MACXC,IAAI,EAAE,CAAC,CAAC;MACRL,WAAW,EAAE;IACf,CAAC;EACH;EAeAM,iBAAiBA,CAAA,EAAG;IAClB;IACA,MAAMC,GAAG,GAAG,oDAAoD;IAChEhB,KAAK,CACFiB,GAAG,CAACD,GAAG,CAAC,CACRE,IAAI,CAAEC,GAAG,IAAK;MACb,MAAML,IAAI,GAAGK,GAAG,CAACC,IAAI,CAACC,KAAK;MAC3B,IAAI,OAAOP,IAAI,KAAK,QAAQ,EAAE;QAC5B,IAAI,CAACJ,QAAQ,CAAC;UAAEI;QAAK,CAAC,CAAC;MACzB;IACF,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAG,MAAMA,CAAA,EAAG;IACP,MAAMN,IAAI,GAAG,IAAI,CAACP,KAAK,CAACC,IAAI;IAE5B,oBACEV,OAAA;MAAKuB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBxB,OAAA,CAACF,gBAAgB;QAAC2B,mBAAmB,EAAE,IAAI,CAACrB;MAAwB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvE7B,OAAA;QAAQ8B,OAAO,EAAE,IAAI,CAACvB,mBAAoB;QAAAiB,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACjEb,IAAI,CAACe,MAAM,GAAG,CAAC,iBAAI/B,OAAA,CAACH,UAAU;QAACoB,KAAK,EAAED;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAEV;AACF;AAEA,eAAe5B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}